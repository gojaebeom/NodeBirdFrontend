{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nvar initialState = {\n  user: {},\n  post: {}\n};\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n\nchangeNickname('boogicho'); // (이전상태, 액션) => 다음상태\n\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/.web-workspace/app/nodeBird/frontend/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","initialState","changeNickname","data","type","rootReducer","index","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAG,EADU;AAIjBC,EAAAA,IAAI,EAAG;AAJU,CAArB;;AAWA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAG,iBADJ;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALD;;AAMAD,cAAc,CAAC,UAAD,CAAd,C,CAEA;;AACA,IAAMG,WAAW,GAAIP,eAAe,CAAC;AACjCQ,EAAAA,KAAK,EAAG,iBAAyB;AAAA,QAAxBC,KAAwB,uEAAhB,EAAgB;AAAA,QAAZC,MAAY;;AAC7B,YAAOA,MAAM,CAACJ,IAAd;AACI,WAAKP,OAAL;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACI,+CAAYD,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AACJ;AACI,eAAOJ,KAAP;AALR;AAOH,GATgC;AAUjCR,EAAAA,IAAI,EAAJA,IAViC;AAWjCC,EAAAA,IAAI,EAAJA;AAXiC,CAAD,CAApC;AAcA,eAAeK,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst initialState = {\r\n    user : {\r\n        \r\n    },\r\n    post : {\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type : 'CHANGE_NICKNAME',\r\n        data,\r\n    };\r\n}\r\nchangeNickname('boogicho');\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer =  combineReducers({\r\n    index : (state = {}, action ) => {\r\n        switch(action.type){\r\n            case HYDRATE : \r\n            console.log('HYDRATE', action);\r\n                return { ...state, ...action.payload }\r\n            default : \r\n                return state;\r\n        }\r\n    },\r\n    user ,\r\n    post ,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}