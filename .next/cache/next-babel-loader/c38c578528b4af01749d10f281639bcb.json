{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const enhancer = false ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/.web-workspace/app/nodeBird/frontend/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAG,QACXL,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CADI,GAEXG,mBAAmB,CAACH,eAAe,CAAC,EAAD,CAAhB,CAFzB;AAGA,QAAMO,KAAK,GAAGL,WAAW,CAACE,OAAD,EAAUE,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAG,iBADI;AAEXC,IAAAA,IAAI,EAAG;AAFI,GAAf;AAIA,SAAOH,KAAP;AACH,CAVD;;AAYA,MAAMI,OAAO,GAAGZ,aAAa,CAACM,cAAD,EAAiB;AAC1CO,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware ,compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const enhancer = process.env.NODE_ENV === 'production' \r\n        ? compose(applyMiddleware([]))\r\n        : composeWithDevTools(applyMiddleware([]));\r\n    const store = createStore(reducer, enhancer);\r\n    store.dispatch({\r\n        type : 'CHANGE_NICKNAME',\r\n        data : 'boogicho',\r\n    })\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { \r\n    debug : process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}