{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\.web-workspace\\\\app\\\\nodeBird\\\\frontend\\\\components\\\\PostForm.js\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n    setText('');\n  }, []);\n  const onClickImageUpload = useCallback(e => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLengh: 140,\n      placeholder: \"dummy data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: y,\n          style: {\n            width: '200px'\n          },\n          alt: y\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/.web-workspace/app/nodeBird/frontend/components/PostForm.js"],"names":["React","useCallback","useRef","useState","Button","Form","Input","useSelector","useDispatch","addPost","PostForm","imagePaths","state","post","dispatch","imageInput","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","y","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAiBJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACC,IAAd,CAAlC;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,UAAU,GAAGb,MAAM,EAAzB;AACA,QAAM;AAAA,OAACc,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMe,YAAY,GAAGjB,WAAW,CAAEkB,CAAD,IAAK;AAClCF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,QAAQ,GAAGrB,WAAW,CAAC,MAAI;AAC7Ba,IAAAA,QAAQ,CAACL,OAAD,CAAR;AACAQ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAH2B,EAGzB,EAHyB,CAA5B;AAIA,QAAMM,kBAAkB,GAAGtB,WAAW,CAAEkB,CAAD,IAAK;AACxCJ,IAAAA,UAAU,CAACS,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACV,UAAU,CAACS,OAAZ,CAFmC,CAAtC;AAGA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,OAAO,EAAC,qBAFZ;AAGI,IAAA,QAAQ,EAAEJ,QAHd;AAAA,4BAKI,QAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAEN,IAAvB;AACI,MAAA,QAAQ,EAAEE,YADd;AAEI,MAAA,QAAQ,EAAE,GAFd;AAGI,MAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,YALJ,eAUI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEH;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAC;AAAP,SAFX;AAGI,QAAA,QAAQ,EAAC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAqBI;AAAA,gBACKhB,UAAU,CAACiB,GAAX,CAAgBC,CAAD,iBACZ;AAAa,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC;AAAT,SAApB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEC,CAAV;AAAa,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAApB;AAAqC,UAAA,GAAG,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAjDD;;AAmDA,eAAenB,QAAf","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths } = useSelector(state=>state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const [text, setText] = useState('');\r\n    const onChangeText = useCallback((e)=>{\r\n        setText(e.target.value);\r\n    }, []);\r\n    const onSubmit = useCallback(()=>{\r\n        dispatch(addPost);\r\n        setText('');\r\n    }, []);\r\n    const onClickImageUpload = useCallback((e)=>{\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    return (\r\n        <Form \r\n            style={{ margin: '10px 0 20px'}}\r\n            encType=\"multipart/form-data\"\r\n            onFinish={onSubmit}\r\n        >\r\n            <Input.TextArea value={text}  \r\n                onChange={onChangeText}\r\n                maxLengh={140}\r\n                placeholder=\"dummy data\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button \r\n                    type=\"primary\" \r\n                    style={{float:'right'}}\r\n                    htmlType=\"submit\"\r\n                >\r\n                    업로드\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v)=>(\r\n                    <div key={v} style={{display:'inline-block'}}>\r\n                        <img src={y} style={{width:'200px'}} alt={y} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}